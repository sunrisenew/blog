import{_ as e,r as o,o as c,c as i,f as l,a as n,b as s,d as t,e as p}from"./app-CFR8qRQT.js";const u={},r=n("p",null,[s("工作中经常会遇到一个需求是在H5页面中渲染PDF文档，虽然现在许多浏览器都支持直接打开预览，但是不同的浏览器中体验并不完全一致，且有些浏览器点击PDF文档链接后是下载行为，这样的用户体验并不好。有时我们甚至需要开发一些自定义需求来显示PDF，这时"),n("code",null,"Mozilla"),s("开源的"),n("code",null,"PDF.js"),s("库就可以满足我们的需求。")],-1),d=n("h2",{id:"安装pdf-js",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#安装pdf-js"},[n("span",null,"安装PDF.js")])],-1),k=n("p",null,[s("先给出"),n("code",null,"PDF.js"),s("的官方文档和仓库地址：")],-1),v={href:"https://mozilla.github.io/pdf.js/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/mozilla/pdf.js",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/mozilla/pdfjs-dist",target:"_blank",rel:"noopener noreferrer"},g=p(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-S</span> pdfjs-dist
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="渲染pdf文档" tabindex="-1"><a class="header-anchor" href="#渲染pdf文档"><span>渲染PDF文档</span></a></h2><p>由于<code>PDF.js</code>是使用<code>canvas</code>来渲染PDF文档的，所以我们的HTML中无需多余的节点，只需要一个<code>div</code>来承载<code>canvas</code>节点：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token comment">&lt;!-- index.html --&gt;</span>
<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>X-UA-Compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ie=edge<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>base</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>PDF.js<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pdf-container<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pdf-container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来在对应的<code>index.js</code>中编写代码渲染事先准备好的PDF文档。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p><code>PDF.js</code>在获取到PDF文档之后会使用<code>Web Worker</code>进行渲染操作，这样渲染动作可以和浏览器主线程分离，不会阻塞主线程。</p></div><p>所以在除了导入<code>PDFJS</code>对象外，还需要导入<code>pdfjs.worker.js</code>文件。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// index.js</span>
<span class="token keyword">import</span> <span class="token constant">PDFJS</span> <span class="token keyword">from</span> <span class="token string">&#39;pdfjs-dist&#39;</span>
<span class="token comment">// 导入pdfjs.worker.js文件</span>
<span class="token keyword">import</span> <span class="token string">&#39;pdfjs-dist/build/pdf.worker.entry&#39;</span>

<span class="token comment">// 在页面加载完成后开始渲染PDF。</span>
window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;load&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">renderPdf</span><span class="token punctuation">(</span><span class="token string">&#39;/static/compressed.pdf&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">renderPdf</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> loadingTask <span class="token operator">=</span> <span class="token constant">PDFJS</span><span class="token punctuation">.</span><span class="token function">getDocument</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
  loadingTask<span class="token punctuation">.</span>promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">pdf</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> pdfContainer <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#pdf-container&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> pdf<span class="token punctuation">.</span>numPages<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">renderPage</span><span class="token punctuation">(</span>pdfContainer<span class="token punctuation">,</span> pdf<span class="token punctuation">,</span> i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">renderPage</span><span class="token punctuation">(</span><span class="token parameter">pdfContainer<span class="token punctuation">,</span> pdf<span class="token punctuation">,</span> pageIndex</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  pdf<span class="token punctuation">.</span><span class="token function">getPage</span><span class="token punctuation">(</span>pageIndex<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">page</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> viewport <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getViewport</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">scale</span><span class="token operator">:</span> <span class="token number">1.5</span><span class="token punctuation">,</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;canvas&#39;</span><span class="token punctuation">)</span>
    pdfContainer<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span>

    <span class="token keyword">const</span> context <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span>
    canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> viewport<span class="token punctuation">.</span>height
    canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> viewport<span class="token punctuation">.</span>width

    <span class="token keyword">const</span> renderContext <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">canvasContext</span><span class="token operator">:</span> context<span class="token punctuation">,</span>
      <span class="token literal-property property">viewport</span><span class="token operator">:</span> viewport
    <span class="token punctuation">}</span>
    page<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>renderContext<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="渲染含有中文的pdf文档" tabindex="-1"><a class="header-anchor" href="#渲染含有中文的pdf文档"><span>渲染含有中文的PDF文档</span></a></h2><p>上面的代码只是一个简单的渲染示例，用这段代码渲染只含有英文的PDF文档没有任何问题，但是如果尝试渲染一个含有中文的PDF文档则会发现<code>canvas</code>节点占着页面的位置但内容却是一片空白。打开控制台发现有一行警告信息：</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>Warning: Error during font loading: The CMap &quot;baseUrl&quot; parameter must be specified, ensure that the &quot;cMapUrl&quot; and &quot;cMapPacked&quot; API parameters are provided.</p></div><p>这是什么原因引起的呢？首先想到的就是渲染中文字符时有编码问题或者缺少特殊的资源。查查什么是<code>CMap</code>文件：</p>`,12),h=n("p",null,"PDF为了识别所有的字符，给每一个文字都赋予一个唯一的编码，叫CID。",-1),f=n("p",null,"然后又提供了不同的字体编码与CID的Map文件和CID和Unicode的Map文件。",-1),P=n("p",null,"一般的PDF文件中文字识别的方法应该是从PDF文件解析出来字体名称和文字编码后，从对应的CMap文件中找到该文字编码对应的CID。然后再根据CID从CID和Unicode的Map文件找到对应的Unicode。",-1),D={href:"https://www.hunterpro.net/archives/293",target:"_blank",rel:"noopener noreferrer"},j=p(`<p>原来是缺少了字体管理文件，查阅<code>PDF.js</code>文档发现了一个参数<code>cMapUrl</code>用来指定<code>CMap</code>文件的路径，注意路径需要包含结尾的<code>/</code>。但是我们现在没有<code>CMap</code>文件，先看看<code>PDF.js</code>有没有为我们提供。果然，在<code>pdfjs-dist</code>模块目录下发现一个<code>cmaps</code>目录，把里面的文件复制到静态资源目录下后，调整<code>renderPdf</code>方法：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">renderPdf</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> loadingTask <span class="token operator">=</span> <span class="token constant">PDFJS</span><span class="token punctuation">.</span><span class="token function">getDocument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    url<span class="token punctuation">,</span>
    <span class="token literal-property property">cMapUrl</span><span class="token operator">:</span> <span class="token string">&#39;/static/cmaps/&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  loadingTask<span class="token punctuation">.</span>promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">pdf</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> pdfContainer <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#pdf-container&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> pdf<span class="token punctuation">.</span>numPages<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">renderPage</span><span class="token punctuation">(</span>pdfContainer<span class="token punctuation">,</span> pdf<span class="token punctuation">,</span> i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>保存刷新页面后发现还是一片空白，打开控制台又发现另一行警告信息：</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>Warning: Error during font loading: Unable to load CMap at: /static/cmaps/UniGB-UTF16-H</p></div><p>仔细观察，发现刚才找到的<code>CMap</code>文件都是以<code>.bcmap</code>结尾的，会不会是格式不正确？再次查阅<code>PDF.js</code>文档发现了一个参数<code>cMapPacked</code>用来指定提供的<code>CMap</code>文件是否已经是<code>二进制打包</code>的，想来<code>bcmap</code>的意思是<code>binary CMap</code>。再次调整<code>renderPdf</code>方法：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">renderPdf</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> loadingTask <span class="token operator">=</span> <span class="token constant">PDFJS</span><span class="token punctuation">.</span><span class="token function">getDocument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    url<span class="token punctuation">,</span>
    <span class="token literal-property property">cMapUrl</span><span class="token operator">:</span> <span class="token string">&#39;/static/cmaps/&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">cMapPacked</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  loadingTask<span class="token punctuation">.</span>promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">pdf</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> pdfContainer <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#pdf-container&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> pdf<span class="token punctuation">.</span>numPages<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">renderPage</span><span class="token punctuation">(</span>pdfContainer<span class="token punctuation">,</span> pdf<span class="token punctuation">,</span> i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>刷新页面发现包含中文的PDF文档也可以正确渲染了。</p><p><code>PDF.js</code>还有许多高级用法，一部分在文档中有说明，但是还有一部分藏在源码或示例代码中，需要主动发掘。不得不说，<code>PDF.js</code>非常强大！</p>`,8);function y(F,w){const a=o("ExternalLinkIcon");return c(),i("div",null,[r,l(" more "),d,k,n("ul",null,[n("li",null,[s("文档："),n("a",v,[s("https://mozilla.github.io/pdf.js/"),t(a)])]),n("li",null,[s("仓库："),n("a",m,[s("https://github.com/mozilla/pdf.js"),t(a)])])]),n("p",null,[s("阅读文档后发现，官方只给出了下载源文件或使用CDN的方式，并没有给出如何使用npm安装。经过一番搜索后发现官方还有另一个库"),n("a",b,[s("pdfjs-dist"),t(a)]),s("发布到了npm上，所以我们只需要执行下面的命令：")]),g,n("blockquote",null,[h,f,P,n("p",null,[s("来源："),n("a",D,[s("https://www.hunterpro.net/archives/293"),t(a)])])]),j])}const q=e(u,[["render",y],["__file","render-pdf-in-h5-using-pdfjs.html.vue"]]),C=JSON.parse('{"path":"/libraries/pdfjs/render-pdf-in-h5-using-pdfjs.html","title":"使用PDF.js在H5页面中渲染PDF文档","lang":"zh-CN","frontmatter":{"title":"使用PDF.js在H5页面中渲染PDF文档","tags":["工具库","H5","JavaScript","PDF"],"description":"工作中经常会遇到一个需求是在H5页面中渲染PDF文档，虽然现在许多浏览器都支持直接打开预览，但是不同的浏览器中体验并不完全一致，且有些浏览器点击PDF文档链接后是下载行为，这样的用户体验并不好。有时我们甚至需要开发一些自定义需求来显示PDF，这时Mozilla开源的PDF.js库就可以满足我们的需求。 安装PDF.js 先给出PDF.js的官方文档和仓...","head":[["meta",{"property":"og:url","content":"https://blog.sunrisenew.cn/libraries/pdfjs/render-pdf-in-h5-using-pdfjs.html"}],["meta",{"property":"og:site_name","content":"sunrisenew"}],["meta",{"property":"og:title","content":"使用PDF.js在H5页面中渲染PDF文档"}],["meta",{"property":"og:description","content":"工作中经常会遇到一个需求是在H5页面中渲染PDF文档，虽然现在许多浏览器都支持直接打开预览，但是不同的浏览器中体验并不完全一致，且有些浏览器点击PDF文档链接后是下载行为，这样的用户体验并不好。有时我们甚至需要开发一些自定义需求来显示PDF，这时Mozilla开源的PDF.js库就可以满足我们的需求。 安装PDF.js 先给出PDF.js的官方文档和仓..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-26T12:07:12.000Z"}],["meta",{"property":"article:author","content":"sunrisenew"}],["meta",{"property":"article:tag","content":"工具库"}],["meta",{"property":"article:tag","content":"H5"}],["meta",{"property":"article:tag","content":"JavaScript"}],["meta",{"property":"article:tag","content":"PDF"}],["meta",{"property":"article:modified_time","content":"2024-03-26T12:07:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用PDF.js在H5页面中渲染PDF文档\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-26T12:07:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"sunrisenew\\",\\"url\\":\\"https://blog.sunrisenew.cn\\",\\"email\\":\\"sunrisenew@foxmail.com\\"}]}"]]},"headers":[{"level":2,"title":"安装PDF.js","slug":"安装pdf-js","link":"#安装pdf-js","children":[]},{"level":2,"title":"渲染PDF文档","slug":"渲染pdf文档","link":"#渲染pdf文档","children":[]},{"level":2,"title":"渲染含有中文的PDF文档","slug":"渲染含有中文的pdf文档","link":"#渲染含有中文的pdf文档","children":[]}],"git":{"createdTime":1710050425000,"updatedTime":1711454832000,"contributors":[{"name":"sunrisenew","email":"sunrisenew@foxmail.com","commits":2}]},"readingTime":{"minutes":4.06,"words":1217},"filePathRelative":"libraries/pdfjs/render-pdf-in-h5-using-pdfjs.md","localizedDate":"2024年3月10日","excerpt":"<p>工作中经常会遇到一个需求是在H5页面中渲染PDF文档，虽然现在许多浏览器都支持直接打开预览，但是不同的浏览器中体验并不完全一致，且有些浏览器点击PDF文档链接后是下载行为，这样的用户体验并不好。有时我们甚至需要开发一些自定义需求来显示PDF，这时<code>Mozilla</code>开源的<code>PDF.js</code>库就可以满足我们的需求。</p>\\n","autoDesc":true}');export{q as comp,C as data};
